@model ELearn.Models.Material

@{
    ViewData["Title"] = "Edit Material";
}

<h1>Edit</h1>

<h4>Study Material</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="MatEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="MatID" />
            <input type="hidden" asp-for="Active" />
            <div class="form-group">
                <label asp-for="Week" class="control-label"></label>
                <input asp-for="Week" class="form-control" />
                <span asp-validation-for="Week" class="text-danger"></span>
            </div>
           <div class="form-group">
               Module Code
               <select asp-for="ModID" asp-items="@Model.Modules"></select>
           </div>
            <div class="form-group">
                <label asp-for="FileLink" class="control-label"></label>
                <input asp-for="FileLink" class="form-control" />
                <span asp-validation-for="FileLink" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("MatIndex", "Lecturer")'">Back</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
